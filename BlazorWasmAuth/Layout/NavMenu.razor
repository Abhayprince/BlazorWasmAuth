@using BlazorWasmAuth.Authentication
@using System.Security.Claims
@inject CustomAuthStateProvider AuthStateProvider
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Blazor WASM Auth</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather 
                <small class="ms-2 text-danger"> [Needs Login]</small>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <AuthorizeView>
                <Authorized>
                    <label class="text-white d-block">
                        @* Hello @context.User.FindFirst(ClaimTypes.Name)!.Value *@
                        Hello @AuthStateProvider.CurrentUser.Name
                    </label>
                    <button type="button" class="btn btn-danger" @onclick="LogoutAsync">Logout</button>
                </Authorized>
                <NotAuthorized>
                    <button type="button" class="btn btn-primary" @onclick="LoginAsync">Login</button>
                </NotAuthorized>
                <Authorizing>
                    <span class="text-white">Checking Auth State...</span>
                </Authorizing>
            </AuthorizeView>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LoginAsync()
    {
        await AuthStateProvider.LoginAsync("dummy-username", "dummy-passoword");
    }
    private async Task LogoutAsync()
    {
        await AuthStateProvider.LogoutAsync();
    }
}
